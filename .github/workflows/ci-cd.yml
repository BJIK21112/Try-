name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Run code quality checks
        run: |
          make format
          make lint
          make type-check
          make security

      - name: Run tests
        run: |
          make test-cov

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  build-and-deploy:
    needs: quality
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/x-bot:latest .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/x-bot:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy x-bot \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/x-bot:latest \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --remove-env-vars "Client_id,client_secret,Access_Token_Secret,Access_Token" \
            --service-account x-bot-secret-accessor@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            --set-env-vars "GOOGLE_CLOUD_PROJECT=${{ secrets.GCP_PROJECT_ID }}" \
            --memory 1Gi \
            --cpu 1 \
            --min-instances 1 \
            --max-instances 3
